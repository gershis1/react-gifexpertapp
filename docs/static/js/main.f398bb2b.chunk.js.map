{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","elemento","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetcGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAqBhD,OACQ,0BAAMC,SAdO,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAG1BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAmBO,OAC1CN,EAAe,OAQX,2BACIO,KAAK,OACLC,MAAUT,EACVU,SAtBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCLnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAIA,KCJHO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDhB,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA4BtC,OApBCC,qBAAW,WACJxB,EAASC,GACRwB,MAAM,SAAAC,GAEAH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAOvB,CAAEpB,IAOCqB,EDxB6BK,CAAa1B,GAAjCa,EAHsB,EAG3BN,KAAaa,EAHc,EAGdA,QAEzB,OACI,oCACI,wBAAIJ,UAAU,sCAAuChB,GAEpDoB,GAAW,uBAAGJ,UAAU,qCAAb,cAEZ,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEdxBkB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,mBAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAW9B,OACI,oCACI,4CACA,kBAAE,EAAF,CAAcA,cAAkBA,IAChC,6BAGA,4BAEQ4C,EAAWpB,KAAK,SAACT,EAAS8B,GAAV,OACZ,kBAAC,EAAD,CACIH,IAAQ3B,EACRA,SAAaA,U,MCzBzC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.f398bb2b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            //console.log('Submit hecho');\r\n            setCategories( elemento => [inputValue,...elemento]  );\r\n            setInputValue( '' );\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value = { inputValue }\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=ED9OTj9LXDJHxqyGGITNFxYcAdgHbOFC`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url //El signo ? condiciona que la variable venga en las imÃ¡genes\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    // console.log({ title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \"  >\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetcGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    \r\n        // const [images, setImages] = useState([]);\r\n        const { data:images, loading } = useFetcGifs( category );\r\n        \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn \">{ category }</h3>\r\n           \r\n           { loading && <p className=\"animate__animated animate__flash \">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetcGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({ \r\n        data:[],\r\n        loading:true\r\n\r\n     });\r\n\r\n      useEffect( () => {\r\n             getGifs( category )\r\n             .then( imgs => {\r\n\r\n                    setState({\r\n                       data: imgs,\r\n                       loading: false\r\n                    });\r\n\r\n\r\n\r\n\r\n             } )\r\n      }, [ category ]);\r\n\r\n\r\n\r\n\r\n    \r\n\r\n     return state; //{data:[], loading:true}\r\n}","import React, { useState } from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n//Functional componets\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Rick&Morty', 'PS5'];\r\n    const [categories, setCategories] = useState(['Rick and Morty']);\r\n\r\n    // const handdleAdd = () =>{\r\n    //     //setCategories([...categories,'Kick Butowsky'])\r\n    //     setCategories( elemento => [...categories,'Kick Butowsky']  );\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            < AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n            {/* <button onClick={ handdleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category,i) => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n        );\r\n\r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}